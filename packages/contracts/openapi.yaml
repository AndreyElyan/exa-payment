openapi: 3.1.0
info:
  title: Payments API
  version: 1.0.0
  description: Sistema de pagamentos com Clean Architecture e DDD
servers:
  - url: http://localhost:3000
    description: Servidor de desenvolvimento
paths:
  /api/payment:
    post:
      summary: Criar pagamento
      description: Cria um novo pagamento (PIX ou Cartão de Crédito)
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
          description: Chave de idempotência para evitar duplicação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentDTO'
      responses:
        '201':
          description: Pagamento criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Dados inválidos
        '409':
          description: Pagamento já existe (idempotência)
    get:
      summary: Listar pagamentos
      description: Lista pagamentos com filtros opcionais
      parameters:
        - in: query
          name: cpf
          schema:
            type: string
            pattern: '^\d{11}$'
          description: CPF para filtrar
        - in: query
          name: paymentMethod
          schema:
            type: string
            enum: [PIX, CREDIT_CARD]
          description: Método de pagamento
        - in: query
          name: status
          schema:
            type: string
            enum: [PENDING, PAID, FAIL]
          description: Status do pagamento
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Página
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Limite por página
      responses:
        '200':
          description: Lista de pagamentos
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentResponse'
                  pagination:
                    $ref: '#/components/schemas/PaginationResponse'
  /api/payment/{id}:
    get:
      summary: Buscar pagamento por ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Pagamento encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '404':
          description: Pagamento não encontrado
    put:
      summary: Atualizar pagamento
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentDTO'
      responses:
        '200':
          description: Pagamento atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Dados inválidos
        '404':
          description: Pagamento não encontrado
  /api/payment/webhook/mercado-pago:
    post:
      summary: Webhook Mercado Pago
      description: Endpoint para receber notificações do Mercado Pago
      parameters:
        - in: header
          name: X-Webhook-Secret
          schema:
            type: string
          description: Segredo do webhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                status:
                  type: string
                  enum: [approved, rejected, pending]
                external_reference:
                  type: string
      responses:
        '204':
          description: Webhook processado com sucesso
        '400':
          description: Dados inválidos
        '401':
          description: Segredo inválido
  /api/payment/export:
    get:
      summary: Exportar pagamentos
      description: Exporta pagamentos em formato NDJSON ou Parquet
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date-time
          description: Data inicial
        - in: query
          name: to
          schema:
            type: string
            format: date-time
          description: Data final
        - in: query
          name: format
          schema:
            type: string
            enum: [ndjson, parquet]
            default: ndjson
          description: Formato de exportação
      responses:
        '200':
          description: Arquivo de exportação
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
components:
  schemas:
    CreatePaymentDTO:
      type: object
      required:
        - cpf
        - amount
        - description
        - paymentMethod
      properties:
        cpf:
          type: string
          pattern: '^\d{11}$'
          description: CPF com 11 dígitos
        amount:
          type: number
          minimum: 0.01
          multipleOf: 0.01
          description: Valor do pagamento
        description:
          type: string
          maxLength: 255
          description: Descrição do pagamento
        paymentMethod:
          type: string
          enum: [PIX, CREDIT_CARD]
          description: Método de pagamento
    UpdatePaymentDTO:
      type: object
      properties:
        status:
          type: string
          enum: [PENDING, PAID, FAIL]
          description: Status do pagamento
    PaymentResponse:
      type: object
      properties:
        id:
          type: string
          description: ID único do pagamento
        cpf:
          type: string
          description: CPF do pagador
        amount:
          type: number
          description: Valor do pagamento
        description:
          type: string
          description: Descrição do pagamento
        paymentMethod:
          type: string
          enum: [PIX, CREDIT_CARD]
          description: Método de pagamento
        status:
          type: string
          enum: [PENDING, PAID, FAIL]
          description: Status do pagamento
        providerRef:
          type: string
          nullable: true
          description: Referência do provedor
        createdAt:
          type: string
          format: date-time
          description: Data de criação
        updatedAt:
          type: string
          format: date-time
          description: Data de atualização
    PaginationResponse:
      type: object
      properties:
        page:
          type: integer
          description: Página atual
        limit:
          type: integer
          description: Limite por página
        total:
          type: integer
          description: Total de registros
        totalPages:
          type: integer
          description: Total de páginas
